I"o<h2 id="a-for-loop-executes-commands-once-for-each-value-in-a-collection">A <em>for loop</em> executes commands once for each value in a collection.</h2>

<ul>
  <li>Doing calculations on the values in a list one by one
is as painful as working with <code class="highlighter-rouge">pressure_001</code>, <code class="highlighter-rouge">pressure_002</code>, etc.</li>
  <li>A <em>for loop</em> tells Python to execute some statements once for each value in a list,
a character string,
or some other collection.</li>
  <li>‚Äúfor each thing in this group, do these operations‚Äù</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">for</span> <span class="n">number</span> <span class="ow">in</span> <span class="p">[</span><span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">5</span><span class="p">]:</span>
    <span class="k">print</span><span class="p">(</span><span class="n">number</span><span class="p">)</span>
</code></pre></div></div>

<ul>
  <li>This <code class="highlighter-rouge">for</code> loop is equivalent to:</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">print</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="mi">3</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="mi">5</span><span class="p">)</span>
</code></pre></div></div>

<ul>
  <li>And the <code class="highlighter-rouge">for</code> loop‚Äôs output is:</li>
</ul>

<div class="output highlighter-rouge"><div class="highlight"><pre class="highlight"><code>2
3
5
</code></pre></div></div>

<h2 id="a-for-loop-is-made-up-of-a-collection-a-loop-variable-and-a-body">A <code class="highlighter-rouge">for</code> loop is made up of a collection, a loop variable, and a body.</h2>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">for</span> <span class="n">number</span> <span class="ow">in</span> <span class="p">[</span><span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">5</span><span class="p">]:</span>
    <span class="k">print</span><span class="p">(</span><span class="n">number</span><span class="p">)</span>
</code></pre></div></div>

<ul>
  <li>The collection, <code class="highlighter-rouge">[2, 3, 5]</code>, is what the loop is being run on.</li>
  <li>The body, <code class="highlighter-rouge">print(number)</code>, specifies what to do for each value in the collection.</li>
  <li>The loop variable, <code class="highlighter-rouge">number</code>, is what changes for each <em>iteration</em> of the loop.
    <ul>
      <li>The ‚Äúcurrent thing‚Äù.</li>
    </ul>
  </li>
</ul>

<h2 id="the-first-line-of-the-for-loop-must-end-with-a-colon-and-the-body-must-be-indented">The first line of the <code class="highlighter-rouge">for</code> loop must end with a colon, and the body must be indented.</h2>

<ul>
  <li>The colon at the end of the first line signals the start of a <em>block</em> of statements.</li>
  <li>Python uses indentation rather than <code class="highlighter-rouge">{}</code> or <code class="highlighter-rouge">begin</code>/<code class="highlighter-rouge">end</code> to show <em>nesting</em>.
    <ul>
      <li>Any consistent indentation is legal, but almost everyone uses four spaces.</li>
    </ul>
  </li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">for</span> <span class="n">number</span> <span class="ow">in</span> <span class="p">[</span><span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">5</span><span class="p">]:</span>
<span class="k">print</span><span class="p">(</span><span class="n">number</span><span class="p">)</span>
</code></pre></div></div>
<div class="error highlighter-rouge"><div class="highlight"><pre class="highlight"><code>IndentationError: expected an indented block
</code></pre></div></div>

<ul>
  <li>Indentation is always meaningful in Python.</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">firstName</span> <span class="o">=</span> <span class="s">"Jon"</span>
  <span class="n">lastName</span> <span class="o">=</span> <span class="s">"Smith"</span>
</code></pre></div></div>
<div class="error highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  File "&lt;ipython-input-7-f65f2962bf9c&gt;", line 2
    lastName = "Smith"
    ^
IndentationError: unexpected indent
</code></pre></div></div>

<ul>
  <li>This error can be fixed by removing the extra spaces
at the beginning of the second line.</li>
</ul>

<h2 id="loop-variables-can-be-called-anything">Loop variables can be called anything.</h2>

<ul>
  <li>As with all variables, loop variables are:
    <ul>
      <li>Created on demand.</li>
      <li>Meaningless: their names can be anything at all.</li>
    </ul>
  </li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">for</span> <span class="n">kitten</span> <span class="ow">in</span> <span class="p">[</span><span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">5</span><span class="p">]:</span>
    <span class="k">print</span><span class="p">(</span><span class="n">kitten</span><span class="p">)</span>
</code></pre></div></div>

<h2 id="the-body-of-a-loop-can-contain-many-statements">The body of a loop can contain many statements.</h2>

<ul>
  <li>But no loop should be more than a few lines long.</li>
  <li>Hard for human beings to keep larger chunks of code in mind.</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">primes</span> <span class="o">=</span> <span class="p">[</span><span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">5</span><span class="p">]</span>
<span class="k">for</span> <span class="n">p</span> <span class="ow">in</span> <span class="n">primes</span><span class="p">:</span>
    <span class="n">squared</span> <span class="o">=</span> <span class="n">p</span> <span class="o">**</span> <span class="mi">2</span>
    <span class="n">cubed</span> <span class="o">=</span> <span class="n">p</span> <span class="o">**</span> <span class="mi">3</span>
    <span class="k">print</span><span class="p">(</span><span class="n">p</span><span class="p">,</span> <span class="n">squared</span><span class="p">,</span> <span class="n">cubed</span><span class="p">)</span>
</code></pre></div></div>
<div class="output highlighter-rouge"><div class="highlight"><pre class="highlight"><code>2 4 8
3 9 27
5 25 125
</code></pre></div></div>

<h2 id="use-range-to-iterate-over-a-sequence-of-numbers">Use <code class="highlighter-rouge">range</code> to iterate over a sequence of numbers.</h2>

<ul>
  <li>The built-in function <a href="https://docs.python.org/3/library/stdtypes.html#range"><code class="highlighter-rouge">range</code></a> produces a sequence of numbers.
    <ul>
      <li><em>Not</em> a list: the numbers are produced on demand
to make looping over large ranges more efficient.</li>
    </ul>
  </li>
  <li><code class="highlighter-rouge">range(N)</code> is the numbers 0..N-1
    <ul>
      <li>Exactly the legal indices of a list or character string of length N</li>
    </ul>
  </li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">print</span><span class="p">(</span><span class="s">'a range is not a list: range(0, 3)'</span><span class="p">)</span>
<span class="k">for</span> <span class="n">number</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">3</span><span class="p">):</span>
    <span class="k">print</span><span class="p">(</span><span class="n">number</span><span class="p">)</span>
</code></pre></div></div>
<div class="output highlighter-rouge"><div class="highlight"><pre class="highlight"><code>a range is not a list: range(0, 3)
0
1
2
</code></pre></div></div>

<h2 id="the-accumulator-pattern-turns-many-values-into-one">The Accumulator pattern turns many values into one.</h2>

<ul>
  <li>A common pattern in programs is to:
    <ol>
      <li>Initialize an <em>accumulator</em> variable to zero, the empty string, or the empty list.</li>
      <li>Update the variable with values from a collection.</li>
    </ol>
  </li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Sum the first 10 integers.
</span><span class="n">total</span> <span class="o">=</span> <span class="mi">0</span>
<span class="k">for</span> <span class="n">number</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">10</span><span class="p">):</span>
   <span class="n">total</span> <span class="o">=</span> <span class="n">total</span> <span class="o">+</span> <span class="p">(</span><span class="n">number</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">total</span><span class="p">)</span>
</code></pre></div></div>
<div class="output highlighter-rouge"><div class="highlight"><pre class="highlight"><code>55
</code></pre></div></div>

<ul>
  <li>Read <code class="highlighter-rouge">total = total + (number + 1)</code> as:
    <ul>
      <li>Add 1 to the current value of the loop variable <code class="highlighter-rouge">number</code>.</li>
      <li>Add that to the current value of the accumulator variable <code class="highlighter-rouge">total</code>.</li>
      <li>Assign that to <code class="highlighter-rouge">total</code>, replacing the current value.</li>
    </ul>
  </li>
  <li>We have to add <code class="highlighter-rouge">number + 1</code> because <code class="highlighter-rouge">range</code> produces 0..9, not 1..10.</li>
</ul>

<blockquote class="challenge">
  <h2 id="classifying-errors">Classifying Errors</h2>

  <p>Is an indentation error a syntax error or a runtime error?</p>
  <blockquote class="solution">
    <h2 id="solution">Solution</h2>
    <p>An IndentationError is a syntax error. Programs with syntax errors cannot be started.
A program with a runtime error will start but an error will be thrown under certain conditions.</p>
  </blockquote>
</blockquote>

<blockquote class="challenge">
  <h2 id="tracing-execution">Tracing Execution</h2>

  <p>Create a table showing the numbers of the lines that are executed when this program runs,
and the values of the variables after each line is executed.</p>

  <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">total</span> <span class="o">=</span> <span class="mi">0</span>
<span class="k">for</span> <span class="n">char</span> <span class="ow">in</span> <span class="s">"tin"</span><span class="p">:</span>
    <span class="n">total</span> <span class="o">=</span> <span class="n">total</span> <span class="o">+</span> <span class="mi">1</span>
</code></pre></div>  </div>
  <blockquote class="solution">
    <h2 id="solution-1">Solution</h2>

    <table>
      <thead>
        <tr>
          <th>Line no</th>
          <th>Variables</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td>1</td>
          <td>total = 0</td>
        </tr>
        <tr>
          <td>2</td>
          <td>total = 0 char = ‚Äòt‚Äô</td>
        </tr>
        <tr>
          <td>3</td>
          <td>total = 1 char = ‚Äòt‚Äô</td>
        </tr>
        <tr>
          <td>2</td>
          <td>total = 1 char = ‚Äòi‚Äô</td>
        </tr>
        <tr>
          <td>3</td>
          <td>total = 2 char = ‚Äòi‚Äô</td>
        </tr>
        <tr>
          <td>2</td>
          <td>total = 2 char = ‚Äòn‚Äô</td>
        </tr>
        <tr>
          <td>3</td>
          <td>total = 3 char = ‚Äòn‚Äô</td>
        </tr>
      </tbody>
    </table>
  </blockquote>
</blockquote>

<blockquote class="challenge">
  <h2 id="reversing-a-string">Reversing a String</h2>

  <p>Fill in the blanks in the program below so that it prints ‚Äúnit‚Äù
(the reverse of the original character string ‚Äútin‚Äù).</p>

  <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">original</span> <span class="o">=</span> <span class="s">"tin"</span>
<span class="n">result</span> <span class="o">=</span> <span class="n">____</span>
<span class="k">for</span> <span class="n">char</span> <span class="ow">in</span> <span class="n">original</span><span class="p">:</span>
    <span class="n">result</span> <span class="o">=</span> <span class="n">____</span>
<span class="k">print</span><span class="p">(</span><span class="n">result</span><span class="p">)</span>
</code></pre></div>  </div>
  <blockquote class="solution">
    <h2 id="solution-2">Solution</h2>
    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">original</span> <span class="o">=</span> <span class="s">"tin"</span>
<span class="n">result</span> <span class="o">=</span> <span class="s">""</span>
<span class="k">for</span> <span class="n">char</span> <span class="ow">in</span> <span class="n">original</span><span class="p">:</span>
    <span class="n">result</span> <span class="o">=</span> <span class="n">char</span> <span class="o">+</span> <span class="n">result</span>
<span class="k">print</span><span class="p">(</span><span class="n">result</span><span class="p">)</span>
</code></pre></div>    </div>
  </blockquote>
</blockquote>

<blockquote class="challenge">
  <h2 id="practice-accumulating">Practice Accumulating</h2>

  <p>Fill in the blanks in each of the programs below
to produce the indicated result.</p>

  <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Total length of the strings in the list: ["red", "green", "blue"] =&gt; 12
</span><span class="n">total</span> <span class="o">=</span> <span class="mi">0</span>
<span class="k">for</span> <span class="n">word</span> <span class="ow">in</span> <span class="p">[</span><span class="s">"red"</span><span class="p">,</span> <span class="s">"green"</span><span class="p">,</span> <span class="s">"blue"</span><span class="p">]:</span>
    <span class="n">____</span> <span class="o">=</span> <span class="n">____</span> <span class="o">+</span> <span class="nb">len</span><span class="p">(</span><span class="n">word</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">total</span><span class="p">)</span>
</code></pre></div>  </div>
  <blockquote class="solution">
    <h2 id="solution-3">Solution</h2>
    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">total</span> <span class="o">=</span> <span class="mi">0</span>
<span class="k">for</span> <span class="n">word</span> <span class="ow">in</span> <span class="p">[</span><span class="s">"red"</span><span class="p">,</span> <span class="s">"green"</span><span class="p">,</span> <span class="s">"blue"</span><span class="p">]:</span>
    <span class="n">total</span> <span class="o">=</span> <span class="n">total</span> <span class="o">+</span> <span class="nb">len</span><span class="p">(</span><span class="n">word</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">total</span><span class="p">)</span>
</code></pre></div>    </div>
  </blockquote>

  <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># List of word lengths: ["red", "green", "blue"] =&gt; [3, 5, 4]
</span><span class="n">lengths</span> <span class="o">=</span> <span class="n">____</span>
<span class="k">for</span> <span class="n">word</span> <span class="ow">in</span> <span class="p">[</span><span class="s">"red"</span><span class="p">,</span> <span class="s">"green"</span><span class="p">,</span> <span class="s">"blue"</span><span class="p">]:</span>
    <span class="n">lengths</span><span class="o">.</span><span class="n">____</span><span class="p">(</span><span class="n">____</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">lengths</span><span class="p">)</span>
</code></pre></div>  </div>
  <blockquote class="solution">
    <h2 id="solution-4">Solution</h2>
    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">lengths</span> <span class="o">=</span> <span class="p">[]</span>
<span class="k">for</span> <span class="n">word</span> <span class="ow">in</span> <span class="p">[</span><span class="s">"red"</span><span class="p">,</span> <span class="s">"green"</span><span class="p">,</span> <span class="s">"blue"</span><span class="p">]:</span>
    <span class="n">lengths</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">word</span><span class="p">))</span>
<span class="k">print</span><span class="p">(</span><span class="n">lengths</span><span class="p">)</span>
</code></pre></div>    </div>
  </blockquote>

  <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Concatenate all words: ["red", "green", "blue"] =&gt; "redgreenblue"
</span><span class="n">words</span> <span class="o">=</span> <span class="p">[</span><span class="s">"red"</span><span class="p">,</span> <span class="s">"green"</span><span class="p">,</span> <span class="s">"blue"</span><span class="p">]</span>
<span class="n">result</span> <span class="o">=</span> <span class="n">____</span>
<span class="k">for</span> <span class="n">____</span> <span class="ow">in</span> <span class="n">____</span><span class="p">:</span>
    <span class="n">____</span>
<span class="k">print</span><span class="p">(</span><span class="n">result</span><span class="p">)</span>
</code></pre></div>  </div>
  <blockquote class="solution">
    <h2 id="solution-5">Solution</h2>
    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">words</span> <span class="o">=</span> <span class="p">[</span><span class="s">"red"</span><span class="p">,</span> <span class="s">"green"</span><span class="p">,</span> <span class="s">"blue"</span><span class="p">]</span>
<span class="n">result</span> <span class="o">=</span> <span class="s">""</span>
<span class="k">for</span> <span class="n">word</span> <span class="ow">in</span> <span class="n">words</span><span class="p">:</span>
    <span class="n">result</span> <span class="o">=</span> <span class="n">result</span> <span class="o">+</span> <span class="n">word</span>
<span class="k">print</span><span class="p">(</span><span class="n">result</span><span class="p">)</span>
</code></pre></div>    </div>
  </blockquote>

  <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Create acronym: ["red", "green", "blue"] =&gt; "RGB"
# write the whole thing
</span></code></pre></div>  </div>
  <blockquote class="solution">
    <h2 id="solution-6">Solution</h2>
    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">acronym</span> <span class="o">=</span> <span class="s">""</span>
<span class="k">for</span> <span class="n">word</span> <span class="ow">in</span> <span class="p">[</span><span class="s">"red"</span><span class="p">,</span> <span class="s">"green"</span><span class="p">,</span> <span class="s">"blue"</span><span class="p">]:</span>
    <span class="n">acronym</span> <span class="o">=</span> <span class="n">acronym</span> <span class="o">+</span> <span class="n">word</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">.</span><span class="n">upper</span><span class="p">()</span>
<span class="k">print</span><span class="p">(</span><span class="n">acronym</span><span class="p">)</span>
</code></pre></div>    </div>
  </blockquote>
</blockquote>

<blockquote class="challenge">
  <h2 id="cumulative-sum">Cumulative Sum</h2>

  <p>Reorder and properly indent the lines of code below
so that they print a list with the cumulative sum of data.
The result should be <code class="highlighter-rouge">[1, 3, 5, 10]</code>.</p>

  <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">cumulative</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="nb">sum</span><span class="p">)</span>
<span class="k">for</span> <span class="n">number</span> <span class="ow">in</span> <span class="n">data</span><span class="p">:</span>
<span class="n">cumulative</span> <span class="o">=</span> <span class="p">[]</span>
<span class="nb">sum</span> <span class="o">+=</span> <span class="n">number</span>
<span class="nb">sum</span> <span class="o">=</span> <span class="mi">0</span>
<span class="k">print</span><span class="p">(</span><span class="n">cumulative</span><span class="p">)</span>
<span class="n">data</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">5</span><span class="p">]</span>
</code></pre></div>  </div>
  <blockquote class="solution">
    <h2 id="solution-7">Solution</h2>
    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sum</span> <span class="o">=</span> <span class="mi">0</span>
<span class="n">data</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">5</span><span class="p">]</span>
<span class="n">cumulative</span> <span class="o">=</span> <span class="p">[]</span>
<span class="k">for</span> <span class="n">number</span> <span class="ow">in</span> <span class="n">data</span><span class="p">:</span>
    <span class="nb">sum</span> <span class="o">+=</span> <span class="n">number</span>
    <span class="n">cumulative</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="nb">sum</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">cumulative</span><span class="p">)</span>
</code></pre></div>    </div>
  </blockquote>
</blockquote>

<blockquote class="challenge">
  <h2 id="identifying-variable-name-errors">Identifying Variable Name Errors</h2>

  <ol>
    <li>Read the code below and try to identify what the errors are
<em>without</em> running it.</li>
    <li>Run the code and read the error message.
What type of <code class="highlighter-rouge">NameError</code> do you think this is?
Is it a string with no quotes, a misspelled variable, or a
variable that should have been defined but was not?</li>
    <li>Fix the error.</li>
    <li>Repeat steps 2 and 3, until you have fixed all the errors.</li>
  </ol>

  <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">for</span> <span class="n">number</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">10</span><span class="p">):</span>
    <span class="c1"># use a if the number is a multiple of 3, otherwise use b
</span>    <span class="k">if</span> <span class="p">(</span><span class="n">Number</span> <span class="o">%</span> <span class="mi">3</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>
        <span class="n">message</span> <span class="o">=</span> <span class="n">message</span> <span class="o">+</span> <span class="n">a</span>
    <span class="k">else</span><span class="p">:</span>
        <span class="n">message</span> <span class="o">=</span> <span class="n">message</span> <span class="o">+</span> <span class="s">"b"</span>
<span class="k">print</span><span class="p">(</span><span class="n">message</span><span class="p">)</span>
</code></pre></div>  </div>
  <blockquote class="solution">
    <h2 id="solution-8">Solution</h2>
    <p>The variable <code class="highlighter-rouge">message</code> needs to be initialized and Python variable names are case sensitive: <code class="highlighter-rouge">number</code> and <code class="highlighter-rouge">Number</code>
refer to different variables.</p>
    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">message</span> <span class="o">=</span> <span class="s">""</span>
<span class="k">for</span> <span class="n">number</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">10</span><span class="p">):</span>
    <span class="c1"># use a if the number is a multiple of 3, otherwise use b
</span>    <span class="k">if</span> <span class="p">(</span><span class="n">number</span> <span class="o">%</span> <span class="mi">3</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>
        <span class="n">message</span> <span class="o">=</span> <span class="n">message</span> <span class="o">+</span> <span class="s">"a"</span>
    <span class="k">else</span><span class="p">:</span>
        <span class="n">message</span> <span class="o">=</span> <span class="n">message</span> <span class="o">+</span> <span class="s">"b"</span>
<span class="k">print</span><span class="p">(</span><span class="n">message</span><span class="p">)</span>
</code></pre></div>    </div>
  </blockquote>
</blockquote>

<blockquote class="challenge">
  <h2 id="identifying-item-errors">Identifying Item Errors</h2>

  <ol>
    <li>Read the code below and try to identify what the errors are
<em>without</em> running it.</li>
    <li>Run the code, and read the error message. What type of error is it?</li>
    <li>Fix the error.</li>
  </ol>

  <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">seasons</span> <span class="o">=</span> <span class="p">[</span><span class="s">'Spring'</span><span class="p">,</span> <span class="s">'Summer'</span><span class="p">,</span> <span class="s">'Fall'</span><span class="p">,</span> <span class="s">'Winter'</span><span class="p">]</span>
<span class="k">print</span><span class="p">(</span><span class="s">'My favorite season is '</span><span class="p">,</span> <span class="n">seasons</span><span class="p">[</span><span class="mi">4</span><span class="p">])</span>
</code></pre></div>  </div>
  <blockquote class="solution">
    <h2 id="solution-9">Solution</h2>
    <p>This list has 4 elements and the index to access the last element in the list is <code class="highlighter-rouge">3</code>.</p>
    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">seasons</span> <span class="o">=</span> <span class="p">[</span><span class="s">'Spring'</span><span class="p">,</span> <span class="s">'Summer'</span><span class="p">,</span> <span class="s">'Fall'</span><span class="p">,</span> <span class="s">'Winter'</span><span class="p">]</span>
<span class="k">print</span><span class="p">(</span><span class="s">'My favorite season is '</span><span class="p">,</span> <span class="n">seasons</span><span class="p">[</span><span class="mi">3</span><span class="p">])</span>
</code></pre></div>    </div>
  </blockquote>
</blockquote>
:ET